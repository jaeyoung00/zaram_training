$version Generated by VerilatedVcd $end
$date Fri Aug 23 18:34:17 2024
 $end
$timescale   1ps $end

 $scope module TOP $end
  $var wire  1 M" i_clk $end
  $var wire  1 N" i_rstn $end
  $var wire 32 H" o_riscv_dmem_addr [31:0] $end
  $var wire  4 J" o_riscv_dmem_byte_sel [3:0] $end
  $var wire 32 L" o_riscv_dmem_rd_data [31:0] $end
  $var wire 32 K" o_riscv_dmem_wr_data [31:0] $end
  $var wire  1 I" o_riscv_dmem_wr_en $end
  $var wire 32 G" o_riscv_imem_instr [31:0] $end
  $var wire 32 F" o_riscv_imem_pc [31:0] $end
  $scope module riscv_top $end
   $var wire  4 l ALUContrlE [3:0] $end
   $var wire 32 c! ALUResultM [31:0] $end
   $var wire  1 m ALUSrcE $end
   $var wire  1 k BranchE $end
   $var wire 32 t ExtImmE [31:0] $end
   $var wire 32 } ExtImmM [31:0] $end
   $var wire  1 l! FlushD $end
   $var wire  1 m! FlushE $end
   $var wire  2 Y" ForWardAE [1:0] $end
   $var wire  2 Z" ForWardBE [1:0] $end
   $var wire  2 n! ForwardAE [1:0] $end
   $var wire  2 o! ForwardBE [1:0] $end
   $var wire  2 j JumpE [1:0] $end
   $var wire  2 h MUX_selE [1:0] $end
   $var wire  2 x MUX_selM [1:0] $end
   $var wire  1 \! MemWriteE $end
   $var wire  1 b! MemWriteM $end
   $var wire 32 q PCE [31:0] $end
   $var wire 32 v PCPlus4E [31:0] $end
   $var wire 32 ~ PCPlus4M [31:0] $end
   $var wire 32 U" PCTargetE [31:0] $end
   $var wire 32 | PC_Plus_immM [31:0] $end
   $var wire 32 o RD1E [31:0] $end
   $var wire 32 p RD2E [31:0] $end
   $var wire 32 T" REGISTER_INIT [31:0] $end
   $var wire  5 ]! RdE [4:0] $end
   $var wire  5 d! RdM [4:0] $end
   $var wire  5 i! RdW [4:0] $end
   $var wire 32 "! ReadDataW [31:0] $end
   $var wire  1 [! RegWriteE $end
   $var wire  1 a! RegWriteM $end
   $var wire  1 h! RegWriteW $end
   $var wire  1 i ResultSrcE $end
   $var wire  1 y ResultSrcM $end
   $var wire  1 !! ResultSrcW $end
   $var wire  5 r Rs1E [4:0] $end
   $var wire  5 s Rs2E [4:0] $end
   $var wire  1 k! StallD $end
   $var wire  1 j! StallF $end
   $var wire 32 { WriteDataM [31:0] $end
   $var wire  3 u funct3E [2:0] $end
   $var wire  5 X" i_RdW [4:0] $end
   $var wire  1 M" i_clk $end
   $var wire  1 W" i_dp_WE3 $end
   $var wire 32 V" i_dp_dmem_WD3 [31:0] $end
   $var wire  1 N" i_rstn $end
   $var wire  4 n mem_byte_selE [3:0] $end
   $var wire  4 z mem_byte_selM [3:0] $end
   $var wire  3 $! mem_funct3 [2:0] $end
   $var wire  2 U! o_MUX_selD [1:0] $end
   $var wire 32 g o_PCD [31:0] $end
   $var wire 32 f o_PCPlus4D [31:0] $end
   $var wire  2 `! o_PCSrcE [1:0] $end
   $var wire 32 f! o_dp_4to1muxM [31:0] $end
   $var wire 32 #! o_dp_4to1muxW [31:0] $end
   $var wire 32 ^! o_dp_ALU [31:0] $end
   $var wire  4 R! o_dp_ALUControlD [3:0] $end
   $var wire  1 S! o_dp_ALUSrcD $end
   $var wire  1 Q! o_dp_BranchD $end
   $var wire 32 V! o_dp_ImmExtD [31:0] $end
   $var wire  2 P! o_dp_JumpD [1:0] $end
   $var wire  1 O! o_dp_MemWriteD $end
   $var wire 32 d o_dp_PCF [31:0] $end
   $var wire 32 e o_dp_PCPlus4F [31:0] $end
   $var wire 32 w o_dp_PC_Plus_immE [31:0] $end
   $var wire 32 O" o_dp_RD1 [31:0] $end
   $var wire 32 P" o_dp_RD2 [31:0] $end
   $var wire  5 Y! o_dp_RdD [4:0] $end
   $var wire  1 M! o_dp_RegWriteD $end
   $var wire  1 N! o_dp_ResultSrcD $end
   $var wire 32 g! o_dp_ResultW [31:0] $end
   $var wire  5 W! o_dp_Rs1D [4:0] $end
   $var wire  5 X! o_dp_Rs2D [4:0] $end
   $var wire 32 _! o_dp_WriteDataE [31:0] $end
   $var wire 32 e! o_dp_dmem_RD [31:0] $end
   $var wire 32 c o_dp_imem_RD [31:0] $end
   $var wire  4 T! o_dp_mem_byte_sel [3:0] $end
   $var wire  3 Z! o_funct3D [2:0] $end
   $var wire 32 L! o_instrD [31:0] $end
   $var wire  4 [" o_mem_byte_sel [3:0] $end
   $var wire 32 H" o_riscv_dmem_addr [31:0] $end
   $var wire  4 J" o_riscv_dmem_byte_sel [3:0] $end
   $var wire 32 L" o_riscv_dmem_rd_data [31:0] $end
   $var wire 32 K" o_riscv_dmem_wr_data [31:0] $end
   $var wire  1 I" o_riscv_dmem_wr_en $end
   $var wire 32 G" o_riscv_imem_instr [31:0] $end
   $var wire 32 F" o_riscv_imem_pc [31:0] $end
   $scope module u_FF_Decode_Execute $end
    $var wire  4 R! ALUContrlD [3:0] $end
    $var wire  4 l ALUContrlE [3:0] $end
    $var wire  1 S! ALUSrcD $end
    $var wire  1 m ALUSrcE $end
    $var wire  1 Q! BranchD $end
    $var wire  1 k BranchE $end
    $var wire 32 V! ExtImmD [31:0] $end
    $var wire 32 t ExtImmE [31:0] $end
    $var wire  2 P! JumpD [1:0] $end
    $var wire  2 j JumpE [1:0] $end
    $var wire  2 h MUX_selE [1:0] $end
    $var wire  1 O! MemWriteD $end
    $var wire  1 \! MemWriteE $end
    $var wire 32 g PCD [31:0] $end
    $var wire 32 q PCE [31:0] $end
    $var wire 32 f PCPlus4D [31:0] $end
    $var wire 32 v PCPlus4E [31:0] $end
    $var wire 32 O" RD1 [31:0] $end
    $var wire 32 o RD1E [31:0] $end
    $var wire 32 P" RD2 [31:0] $end
    $var wire 32 p RD2E [31:0] $end
    $var wire 32 T" REGISTER_INIT [31:0] $end
    $var wire  5 Y! RdD [4:0] $end
    $var wire  5 ]! RdE [4:0] $end
    $var wire  1 M! RegWriteD $end
    $var wire  1 [! RegWriteE $end
    $var wire  1 N! ResultSrcD $end
    $var wire  1 i ResultSrcE $end
    $var wire  5 W! Rs1D [4:0] $end
    $var wire  5 r Rs1E [4:0] $end
    $var wire  5 X! Rs2D [4:0] $end
    $var wire  5 s Rs2E [4:0] $end
    $var wire  3 Z! funct3D [2:0] $end
    $var wire  3 u funct3E [2:0] $end
    $var wire  1 m! i_FlushE_CLR $end
    $var wire  1 M" i_clk $end
    $var wire  1 N" i_rstn $end
    $var wire  4 n mem_byte_selE [3:0] $end
    $var wire  2 U! o_ctrl_MUX_selD [1:0] $end
    $var wire  4 T! o_dp_mem_byte_sel [3:0] $end
   $upscope $end
   $scope module u_FF_Execute_Memory $end
    $var wire 32 c! ALUResultM [31:0] $end
    $var wire 32 t ExtImmE [31:0] $end
    $var wire 32 } ExtImmM [31:0] $end
    $var wire  2 h MUX_selE [1:0] $end
    $var wire  2 x MUX_selM [1:0] $end
    $var wire  1 \! MemWriteE $end
    $var wire  1 b! MemWriteM $end
    $var wire 32 v PCPlus4E [31:0] $end
    $var wire 32 ~ PCPlus4M [31:0] $end
    $var wire 32 | PC_Plus_immM [31:0] $end
    $var wire 32 T" REGISTER_INIT [31:0] $end
    $var wire  5 ]! RdE [4:0] $end
    $var wire  5 d! RdM [4:0] $end
    $var wire  1 [! RegWriteE $end
    $var wire  1 a! RegWriteM $end
    $var wire  1 i ResultSrcE $end
    $var wire  1 y ResultSrcM $end
    $var wire 32 { WriteDataM [31:0] $end
    $var wire  3 u funct3E [2:0] $end
    $var wire  3 $! funct3M [2:0] $end
    $var wire  1 M" i_clk $end
    $var wire  1 N" i_rstn $end
    $var wire  4 T! mem_byte_selE [3:0] $end
    $var wire  4 z mem_byte_selM [3:0] $end
    $var wire 32 ^! o_dp_ALU [31:0] $end
    $var wire 32 w o_dp_PC_Plus_immE [31:0] $end
    $var wire 32 _! o_dp_WriteDataE [31:0] $end
   $upscope $end
   $scope module u_FF_Fetch_Decode $end
    $var wire  1 l! i_FlushD_CLR $end
    $var wire 32 d i_PCF [31:0] $end
    $var wire 32 e i_PCPlus4F [31:0] $end
    $var wire  1 k! i_StallD_en $end
    $var wire  1 M" i_clk $end
    $var wire 32 c i_imem_RD [31:0] $end
    $var wire  1 N" i_rstn $end
    $var wire 32 g o_PCD [31:0] $end
    $var wire 32 f o_PCPlus4D [31:0] $end
    $var wire 32 L! o_instrD [31:0] $end
   $upscope $end
   $scope module u_FF_Memory_Writeback $end
    $var wire 32 T" REGISTER_INIT [31:0] $end
    $var wire  5 d! RdM [4:0] $end
    $var wire  5 i! RdW [4:0] $end
    $var wire 32 "! ReadDataW [31:0] $end
    $var wire  1 a! RegWriteM $end
    $var wire  1 h! RegWriteW $end
    $var wire  1 y ResultSrcM $end
    $var wire  1 !! ResultSrcW $end
    $var wire  1 M" i_clk $end
    $var wire  1 N" i_rstn $end
    $var wire 32 f! o_dp_4to1muxM [31:0] $end
    $var wire 32 #! o_dp_4to1muxW [31:0] $end
    $var wire 32 e! o_dp_dmem_RD [31:0] $end
   $upscope $end
   $scope module u_hazard_unit $end
    $var wire  1 l! FlushD $end
    $var wire  1 m! FlushE $end
    $var wire  2 n! ForwardAE [1:0] $end
    $var wire  2 o! ForwardBE [1:0] $end
    $var wire  2 `! PCSrcE [1:0] $end
    $var wire  5 ]! RdE [4:0] $end
    $var wire  5 d! RdM [4:0] $end
    $var wire  5 i! RdW [4:0] $end
    $var wire  1 a! RegWriteM $end
    $var wire  1 h! RegWriteW $end
    $var wire  1 i ResultSrcE $end
    $var wire  5 W! Rs1D [4:0] $end
    $var wire  5 r Rs1E [4:0] $end
    $var wire  5 X! Rs2D [4:0] $end
    $var wire  5 s Rs2E [4:0] $end
    $var wire  1 k! StallD $end
    $var wire  1 j! StallF $end
    $var wire  1 E" lwStall $end
   $upscope $end
   $scope module u_pipe_datapath_Decode $end
    $var wire  3 x! dp_ImmSrcD [2:0] $end
    $var wire  5 i! i_RdW [4:0] $end
    $var wire  1 M" i_clk $end
    $var wire  1 h! i_dp_WE3 $end
    $var wire 32 g! i_dp_dmem_WD3 [31:0] $end
    $var wire 32 L! i_dp_instrD [31:0] $end
    $var wire  1 N" i_rstn $end
    $var wire  2 U! o_MUX_selD [1:0] $end
    $var wire  4 R! o_dp_ALUControlD [3:0] $end
    $var wire  1 S! o_dp_ALUSrcD $end
    $var wire  1 Q! o_dp_BranchD $end
    $var wire 32 V! o_dp_ImmExtD [31:0] $end
    $var wire  2 P! o_dp_JumpD [1:0] $end
    $var wire  1 O! o_dp_MemWriteD $end
    $var wire 32 O" o_dp_RD1 [31:0] $end
    $var wire 32 P" o_dp_RD2 [31:0] $end
    $var wire  5 Y! o_dp_RdD [4:0] $end
    $var wire  1 M! o_dp_RegWriteD $end
    $var wire  1 N! o_dp_ResultSrcD $end
    $var wire  5 W! o_dp_Rs1D [4:0] $end
    $var wire  5 X! o_dp_Rs2D [4:0] $end
    $var wire  4 T! o_dp_mem_byte_sel [3:0] $end
    $var wire  3 Z! o_funct3D [2:0] $end
    $scope module u_pipe_ctrl $end
     $var wire 256 {! DEBUG_INSTR [255:0] $end
     $var wire  3 Z! i_ctrl_funct3 [2:0] $end
     $var wire  1 z! i_ctrl_funct7_5b $end
     $var wire  7 y! i_ctrl_op [6:0] $end
     $var wire  4 R! o_ctrl_ALUControlD [3:0] $end
     $var wire  1 S! o_ctrl_ALUSrcD $end
     $var wire  1 Q! o_ctrl_BranchD $end
     $var wire  3 x! o_ctrl_ImmSrcD [2:0] $end
     $var wire  2 P! o_ctrl_JumpD [1:0] $end
     $var wire  2 U! o_ctrl_MUX_selD [1:0] $end
     $var wire  1 O! o_ctrl_MemWriteD $end
     $var wire  1 M! o_ctrl_RegWriteD $end
     $var wire  1 N! o_ctrl_ResultSrcD $end
     $var wire  4 T! o_ctrl_mem_byte_sel [3:0] $end
    $upscope $end
    $scope module u_riscv_immext $end
     $var wire 32 L! i_imm_instr [31:0] $end
     $var wire  3 x! i_imm_src [2:0] $end
     $var wire 32 V! o_imm_ext [31:0] $end
    $upscope $end
    $scope module u_riscv_regfile $end
     $var wire  1 M" i_clk $end
     $var wire  5 i! i_regfile_rd_addr [4:0] $end
     $var wire 32 g! i_regfile_rd_data [31:0] $end
     $var wire  1 h! i_regfile_rd_wen $end
     $var wire  5 W! i_regfile_rs1_addr [4:0] $end
     $var wire  5 X! i_regfile_rs2_addr [4:0] $end
     $var wire 32 O" o_regfile_rs1_data [31:0] $end
     $var wire 32 P" o_regfile_rs2_data [31:0] $end
     $var wire 32 ,! registers(0) [31:0] $end
     $var wire 32 -! registers(1) [31:0] $end
     $var wire 32 6! registers(10) [31:0] $end
     $var wire 32 7! registers(11) [31:0] $end
     $var wire 32 8! registers(12) [31:0] $end
     $var wire 32 9! registers(13) [31:0] $end
     $var wire 32 :! registers(14) [31:0] $end
     $var wire 32 ;! registers(15) [31:0] $end
     $var wire 32 <! registers(16) [31:0] $end
     $var wire 32 =! registers(17) [31:0] $end
     $var wire 32 >! registers(18) [31:0] $end
     $var wire 32 ?! registers(19) [31:0] $end
     $var wire 32 .! registers(2) [31:0] $end
     $var wire 32 @! registers(20) [31:0] $end
     $var wire 32 A! registers(21) [31:0] $end
     $var wire 32 B! registers(22) [31:0] $end
     $var wire 32 C! registers(23) [31:0] $end
     $var wire 32 D! registers(24) [31:0] $end
     $var wire 32 E! registers(25) [31:0] $end
     $var wire 32 F! registers(26) [31:0] $end
     $var wire 32 G! registers(27) [31:0] $end
     $var wire 32 H! registers(28) [31:0] $end
     $var wire 32 I! registers(29) [31:0] $end
     $var wire 32 /! registers(3) [31:0] $end
     $var wire 32 J! registers(30) [31:0] $end
     $var wire 32 K! registers(31) [31:0] $end
     $var wire 32 0! registers(4) [31:0] $end
     $var wire 32 1! registers(5) [31:0] $end
     $var wire 32 2! registers(6) [31:0] $end
     $var wire 32 3! registers(7) [31:0] $end
     $var wire 32 4! registers(8) [31:0] $end
     $var wire 32 5! registers(9) [31:0] $end
    $upscope $end
   $upscope $end
   $scope module u_pipe_datapath_Execute $end
    $var wire  1 m ALUSrcE $end
    $var wire  2 n! ForWardAE [1:0] $end
    $var wire  2 o! ForWardBE [1:0] $end
    $var wire 32 T" REGISTER_INIT [31:0] $end
    $var wire 32 '" SrcAE [31:0] $end
    $var wire 32 (" SrcBE [31:0] $end
    $var wire  1 Q" and_output $end
    $var wire  1 M" i_clk $end
    $var wire 32 f! i_dp_4to1mux [31:0] $end
    $var wire  4 l i_dp_ALUContrlE [3:0] $end
    $var wire  1 k i_dp_BranchE $end
    $var wire 32 t i_dp_ImmExtE [31:0] $end
    $var wire  2 j i_dp_JumpE [1:0] $end
    $var wire 32 q i_dp_PCE [31:0] $end
    $var wire 32 o i_dp_RD1E [31:0] $end
    $var wire 32 p i_dp_RD2E [31:0] $end
    $var wire 32 g! i_dp_ResultW [31:0] $end
    $var wire  3 u i_dp_ctrl_funct3 [2:0] $end
    $var wire  1 N" i_rstn $end
    $var wire 32 t mux_c_ExtImmE [31:0] $end
    $var wire 32 _! mux_c_RD2E [31:0] $end
    $var wire 96 )" mux_concat_alu_a [95:0] $end
    $var wire 96 ," mux_concat_alu_b [95:0] $end
    $var wire 64 /" mux_concat_alu_c [63:0] $end
    $var wire  2 `! o_PCSrcE [1:0] $end
    $var wire 32 ^! o_dp_ALU [31:0] $end
    $var wire  1 %" o_dp_ALU_Zero $end
    $var wire 32 w o_dp_PC_Plus_immE [31:0] $end
    $var wire 32 _! o_dp_WriteDataE [31:0] $end
    $var wire  1 &" take_branch $end
    $scope module u_riscv_adder $end
     $var wire 32 q i_adder_a [31:0] $end
     $var wire 32 t i_adder_b [31:0] $end
     $var wire 32 w o_adder_sum [31:0] $end
    $upscope $end
    $scope module u_riscv_alu $end
     $var wire 64 &! DEBUG_ALU_OP [63:0] $end
     $var wire 32 '" i_alu_a [31:0] $end
     $var wire 32 (" i_alu_b [31:0] $end
     $var wire  4 l i_alu_ctrl [3:0] $end
     $var wire 32 ^! o_alu_result [31:0] $end
     $var wire  1 %" o_alu_zero $end
    $upscope $end
    $scope module u_riscv_mux_a $end
     $var wire 32 ]" N_MUX_IN [31:0] $end
     $var wire 96 )" i_mux_concat_data [95:0] $end
     $var wire  2 n! i_mux_sel [1:0] $end
     $var wire 32 1" mux_input_arr(0) [31:0] $end
     $var wire 32 2" mux_input_arr(1) [31:0] $end
     $var wire 32 3" mux_input_arr(2) [31:0] $end
     $var wire 32 '" o_mux_data [31:0] $end
    $upscope $end
    $scope module u_riscv_mux_b $end
     $var wire 32 ]" N_MUX_IN [31:0] $end
     $var wire 96 ," i_mux_concat_data [95:0] $end
     $var wire  2 o! i_mux_sel [1:0] $end
     $var wire 32 4" mux_input_arr(0) [31:0] $end
     $var wire 32 5" mux_input_arr(1) [31:0] $end
     $var wire 32 6" mux_input_arr(2) [31:0] $end
     $var wire 32 _! o_mux_data [31:0] $end
    $upscope $end
    $scope module u_riscv_mux_c $end
     $var wire 32 ^" N_MUX_IN [31:0] $end
     $var wire 64 /" i_mux_concat_data [63:0] $end
     $var wire  1 m i_mux_sel [0:0] $end
     $var wire 32 7" mux_input_arr(0) [31:0] $end
     $var wire 32 8" mux_input_arr(1) [31:0] $end
     $var wire 32 (" o_mux_data [31:0] $end
    $upscope $end
   $upscope $end
   $scope module u_pipe_datapath_Fetch $end
    $var wire 32 d PCF [31:0] $end
    $var wire 32 p! PCFF [31:0] $end
    $var wire 32 w PCTargetE [31:0] $end
    $var wire 32 T" REGISTER_INIT [31:0] $end
    $var wire  1 j! StallF $end
    $var wire 32 e dp_PCPlus4F [31:0] $end
    $var wire  2 `! i_PCSrcE [1:0] $end
    $var wire  1 M" i_clk $end
    $var wire 32 ^! i_dp_ALUF [31:0] $end
    $var wire  1 N" i_rstn $end
    $var wire 96 q! mux_concat_pc [95:0] $end
    $var wire 32 d o_dp_PCF [31:0] $end
    $var wire 32 e o_dp_PCPlus4F [31:0] $end
    $var wire 32 c o_dp_imem_RD [31:0] $end
    $scope module u_riscv_adder $end
     $var wire 32 d i_adder_a [31:0] $end
     $var wire 32 \" i_adder_b [31:0] $end
     $var wire 32 e o_adder_sum [31:0] $end
    $upscope $end
    $scope module u_riscv_imem $end
     $var wire 1024 # FILE_TEXT_MIF [1023:0] $end
     $var wire  1 M" i_clk $end
     $var wire 14 %! i_imem_addr [13:0] $end
     $var wire 32 c o_imem_data [31:0] $end
    $upscope $end
    $scope module u_riscv_mux $end
     $var wire 32 ]" N_MUX_IN [31:0] $end
     $var wire 96 q! i_mux_concat_data [95:0] $end
     $var wire  2 `! i_mux_sel [1:0] $end
     $var wire 32 u! mux_input_arr(0) [31:0] $end
     $var wire 32 v! mux_input_arr(1) [31:0] $end
     $var wire 32 w! mux_input_arr(2) [31:0] $end
     $var wire 32 p! o_mux_data [31:0] $end
    $upscope $end
    $scope module u_riscv_register $end
     $var wire 32 T" REGISTER_INIT [31:0] $end
     $var wire  1 M" i_clk $end
     $var wire 32 p! i_register_d [31:0] $end
     $var wire  1 t! i_register_en $end
     $var wire  1 N" i_rstn $end
     $var wire 32 d o_register_q [31:0] $end
    $upscope $end
   $upscope $end
   $scope module u_pipe_datapath_Memory $end
    $var wire 32 T" REGISTER_INIT [31:0] $end
    $var wire 32 c! dmem_addr [31:0] $end
    $var wire  4 >" dmem_byte_sel [3:0] $end
    $var wire 32 R" dmem_rd_data [31:0] $end
    $var wire  1 b! dmem_wr_en $end
    $var wire 32 =" dmem_write_data [31:0] $end
    $var wire  1 M" i_clk $end
    $var wire 32 c! i_dp_ALUResultM [31:0] $end
    $var wire 32 } i_dp_ExtImmM [31:0] $end
    $var wire  1 b! i_dp_MemWriteM $end
    $var wire 32 ~ i_dp_PCPlus4M [31:0] $end
    $var wire 32 | i_dp_PCPlusImm [31:0] $end
    $var wire 32 { i_dp_WriteDataM [31:0] $end
    $var wire  3 $! i_dp_mem_funct3 [2:0] $end
    $var wire  1 N" i_rstn $end
    $var wire  4 z mem_byte_selM [3:0] $end
    $var wire 128 9" mux_concat_4to1 [127:0] $end
    $var wire  2 x o_MUX_selM [1:0] $end
    $var wire 32 f! o_dp_4to1muxM [31:0] $end
    $var wire 32 e! o_dp_dmem_RD [31:0] $end
    $scope module u_riscv_dmem $end
     $var wire 1024 C FILE_DATA_MIF [1023:0] $end
     $var wire 32 S" i [31:0] $end
     $var wire  1 M" i_clk $end
     $var wire 14 @" i_dmem_addr [13:0] $end
     $var wire  4 >" i_dmem_byte_sel [3:0] $end
     $var wire 32 =" i_dmem_data [31:0] $end
     $var wire  1 b! i_dmem_wr_en $end
     $var wire 32 R" o_dmem_data [31:0] $end
    $upscope $end
    $scope module u_riscv_dmem_interface $end
     $var wire 32 ?" byte_aligned_dmem_rd_data [31:0] $end
     $var wire 32 c! i_dmem_intf_addr [31:0] $end
     $var wire  4 z i_dmem_intf_byte_sel [3:0] $end
     $var wire  3 $! i_dmem_intf_func3 [2:0] $end
     $var wire 32 R" i_dmem_intf_rd_data [31:0] $end
     $var wire  1 b! i_dmem_intf_wen $end
     $var wire 32 { i_dmem_intf_wr_data [31:0] $end
     $var wire 32 c! o_dmem_intf_addr [31:0] $end
     $var wire  4 >" o_dmem_intf_byte_sel [3:0] $end
     $var wire 32 e! o_dmem_intf_rd_data [31:0] $end
     $var wire  1 b! o_dmem_intf_wen $end
     $var wire 32 =" o_dmem_intf_wr_data [31:0] $end
    $upscope $end
    $scope module u_riscv_mux $end
     $var wire 32 _" N_MUX_IN [31:0] $end
     $var wire 128 9" i_mux_concat_data [127:0] $end
     $var wire  2 x i_mux_sel [1:0] $end
     $var wire 32 A" mux_input_arr(0) [31:0] $end
     $var wire 32 B" mux_input_arr(1) [31:0] $end
     $var wire 32 C" mux_input_arr(2) [31:0] $end
     $var wire 32 D" mux_input_arr(3) [31:0] $end
     $var wire 32 f! o_mux_data [31:0] $end
    $upscope $end
   $upscope $end
   $scope module u_pipe_datapath_Writeback $end
    $var wire 32 T" REGISTER_INIT [31:0] $end
    $var wire  1 M" i_clk $end
    $var wire 32 #! i_dp_4to1muxW [31:0] $end
    $var wire 32 "! i_dp_ReadDataW [31:0] $end
    $var wire  1 !! i_dp_ResultSrcW $end
    $var wire  1 N" i_rstn $end
    $var wire 64 (! mux_concat_rd [63:0] $end
    $var wire 32 g! o_dp_ResultW [31:0] $end
    $scope module u_riscv_mux $end
     $var wire 32 ^" N_MUX_IN [31:0] $end
     $var wire 64 (! i_mux_concat_data [63:0] $end
     $var wire  1 !! i_mux_sel [0:0] $end
     $var wire 32 *! mux_input_arr(0) [31:0] $end
     $var wire 32 +! mux_input_arr(1) [31:0] $end
     $var wire 32 g! o_mux_data [31:0] $end
    $upscope $end
   $upscope $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
b
b
b11111111000000000000010100010011 c
b00000000000000000000000000000000 d
b00000000000000000000000000000100 e
b00000000000000000000000000000000 f
b00000000000000000000000000000000 g
b00 h
0i
b00 j
0k
b0000 l
0m
b0000 n
b00000000000000000000000000000000 o
b00000000000000000000000000000000 p
b00000000000000000000000000000000 q
b00000 r
b00000 s
b00000000000000000000000000000000 t
b000 u
b00000000000000000000000000000000 v
b00000000000000000000000000000000 w
b00 x
0y
b0000 z
b00000000000000000000000000000000 {
b00000000000000000000000000000000 |
b00000000000000000000000000000000 }
b00000000000000000000000000000000 ~
0!!
b00000000000000000000000000000000 "!
b00000000000000000000000000000000 #!
b000 $!
b00000000000000 %!
b0000000000000000000000000000000001000001010001000100010000001001 &!
b0000000000000000000000000000000000000000000000000000000000000000 (!
b00000000000000000000000000000000 *!
b00000000000000000000000000000000 +!
b00000000000000000000000000000000 ,!
b00000000000000000000000000000000 -!
b00000000000000000000000000000000 .!
b00000000000000000000000000000000 /!
b00000000000000000000000000000000 0!
b00000000000000000000000000000000 1!
b00000000000000000000000000000000 2!
b00000000000000000000000000000000 3!
b00000000000000000000000000000000 4!
b00000000000000000000000000000000 5!
b00000000000000000000000000000000 6!
b00000000000000000000000000000000 7!
b00000000000000000000000000000000 8!
b00000000000000000000000000000000 9!
b00000000000000000000000000000000 :!
b00000000000000000000000000000000 ;!
b00000000000000000000000000000000 <!
b00000000000000000000000000000000 =!
b00000000000000000000000000000000 >!
b00000000000000000000000000000000 ?!
b00000000000000000000000000000000 @!
b00000000000000000000000000000000 A!
b00000000000000000000000000000000 B!
b00000000000000000000000000000000 C!
b00000000000000000000000000000000 D!
b00000000000000000000000000000000 E!
b00000000000000000000000000000000 F!
b00000000000000000000000000000000 G!
b00000000000000000000000000000000 H!
b00000000000000000000000000000000 I!
b00000000000000000000000000000000 J!
b00000000000000000000000000000000 K!
b00000000000000000000000000000000 L!
1M!
1N!
0O!
b00 P!
0Q!
b0000 R!
0S!
b1111 T!
b00 U!
b00000000000000000000000000000000 V!
b00000 W!
b00000 X!
b00000 Y!
b000 Z!
0[!
0\!
b00000 ]!
b00000000000000000000000000000000 ^!
b00000000000000000000000000000000 _!
b00 `!
0a!
0b!
b00000000000000000000000000000000 c!
b00000 d!
b00000000000000000000000000000000 e!
b00000000000000000000000000000000 f!
b00000000000000000000000000000000 g!
0h!
b00000 i!
1j!
1k!
0l!
0m!
b00 n!
b00 o!
b00000000000000000000000000000100 p!
b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100 q!
0t!
b00000000000000000000000000000100 u!
b00000000000000000000000000000000 v!
b00000000000000000000000000000000 w!
b111 x!
b0000000 y!
0z!
b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000110111001101111011001000110010101100110 {!
1%"
1&"
b00000000000000000000000000000000 '"
b00000000000000000000000000000000 ("
b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 )"
b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 ,"
b0000000000000000000000000000000000000000000000000000000000000000 /"
b00000000000000000000000000000000 1"
b00000000000000000000000000000000 2"
b00000000000000000000000000000000 3"
b00000000000000000000000000000000 4"
b00000000000000000000000000000000 5"
b00000000000000000000000000000000 6"
b00000000000000000000000000000000 7"
b00000000000000000000000000000000 8"
b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 9"
b00000000000000000000000000000000 ="
b0000 >"
b00000000000000000000000000000000 ?"
b00000000000000 @"
b00000000000000000000000000000000 A"
b00000000000000000000000000000000 B"
b00000000000000000000000000000000 C"
b00000000000000000000000000000000 D"
1E"
b00000000000000000000000000000000 F"
b11111111000000000000010100010011 G"
b00000000000000000000000000000000 H"
0I"
b0000 J"
b00000000000000000000000000000000 K"
b00000000000000000000000000000000 L"
1M"
0N"
b00000000000000000000000000000000 O"
b00000000000000000000000000000000 P"
0Q"
b00000000000000000000000000000000 R"
b00000000000000000000000000000000 S"
b00000000000000000000000000000000 T"
b00000000000000000000000000000000 U"
b00000000000000000000000000000000 V"
0W"
b00000 X"
b00 Y"
b00 Z"
b0000 ["
b00000000000000000000000000000100 \"
b00000000000000000000000000000011 ]"
b00000000000000000000000000000010 ^"
b00000000000000000000000000000100 _"
#1
0M"
#2
1M"
#3
0M"
#4
1M"
#5
0M"
#6
1M"
#7
0M"
#8
1M"
#9
0M"
#10
1M"
#11
0M"
1N"
#12
1i
b1111 n
b1111 z
1[!
0j!
0k!
1t!
b1111 >"
0E"
b1111 J"
1M"
#13
0M"
#14
b00000000000100000000010110010011 c
b00000000000000000000000000000100 d
b00000000000000000000000000001000 e
b00000000000000000000000000000100 f
1y
b00000000000001 %!
b11111111000000000000010100010011 L!
1S!
b11111111111111111111111111110000 V!
b10000 X!
b01010 Y!
1a!
b00000000000000000000000000001000 p!
b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000 q!
b00000000000000000000000000001000 u!
b001 x!
b0010011 y!
1z!
b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001100001011001000110010001101001 {!
b00000000000000000000000000000100 F"
b00000000000100000000010110010011 G"
1M"
#15
0M"
#16
b00000000101101010010000000100011 c
b00000000000000000000000000001000 d
b00000000000000000000000000001100 e
b00000000000000000000000000001000 f
b00000000000000000000000000000100 g
1m
b10000 s
b11111111111111111111111111110000 t
b00000000000000000000000000000100 v
b11111111111111111111111111110000 w
1!!
b00000000000010 %!
b00000000000100000000010110010011 L!
b00000000000000000000000000000001 V!
b00001 X!
b01011 Y!
b01010 ]!
b11111111111111111111111111110000 ^!
1h!
b00000000000000000000000000001100 p!
b111111111111111111111111111100001111111111111111111111111111000000000000000000000000000000001100 q!
b00000000000000000000000000001100 u!
b11111111111111111111111111110000 v!
b11111111111111111111111111110000 w!
0z!
0%"
0&"
b11111111111111111111111111110000 ("
b1111111111111111111111111111000000000000000000000000000000000000 /"
b11111111111111111111111111110000 8"
b00000000000000000000000000001000 F"
b00000000101101010010000000100011 G"
1M"
#17
0M"
#18
b11111111010111111111000001101111 c
b00000000000000000000000000001100 d
b00000000000000000000000000010000 e
b00000000000000000000000000001100 f
b00000000000000000000000000001000 g
b00000000000000000000000000000100 q
b00001 s
b00000000000000000000000000000001 t
b00000000000000000000000000001000 v
b00000000000000000000000000000101 w
b11111111111111111111111111110000 |
b11111111111111111111111111110000 }
b00000000000000000000000000000100 ~
b00000000000011 %!
b00000000101101010010000000100011 L!
0M!
1O!
b00000000000000000000000000000000 V!
b01010 W!
b01011 X!
b00000 Y!
b010 Z!
b01011 ]!
b00000000000000000000000000000001 ^!
b11111111111111111111111111110000 c!
b01010 d!
b11111111111111111111111111110000 f!
b00000000000000000000000000010000 p!
b000000000000000000000000000000010000000000000000000000000000010100000000000000000000000000010000 q!
b00000000000000000000000000010000 u!
b00000000000000000000000000000101 v!
b00000000000000000000000000000001 w!
b010 x!
b0100011 y!
b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000111001101110111 {!
b00000000000000000000000000000001 ("
b111111111111111111111111111100000000000000000000000000000000000000000000000000000000000000000000 )"
b111111111111111111111111111100000000000000000000000000000000000000000000000000000000000000000000 ,"
b0000000000000000000000000000000100000000000000000000000000000000 /"
b11111111111111111111111111110000 3"
b11111111111111111111111111110000 6"
b00000000000000000000000000000001 8"
b00000000000000000000000000000100111111111111111111111111111100001111111111111111111111111111000011111111111111111111111111110000 9"
b11111111111100 @"
b11111111111111111111111111110000 A"
b11111111111111111111111111110000 B"
b11111111111111111111111111110000 C"
b00000000000000000000000000000100 D"
b00000000000000000000000000001100 F"
b11111111010111111111000001101111 G"
b11111111111111111111111111110000 H"
1M"
#19
0M"
#20
b00000000000000000000000000000000 c
b00000000000000000000000000010000 d
b00000000000000000000000000010100 e
b00000000000000000000000000010000 f
b00000000000000000000000000001100 g
b00000000000000000000000000001000 q
b01010 r
b01011 s
b00000000000000000000000000000000 t
b010 u
b00000000000000000000000000001100 v
b00000000000000000000000000001000 w
b00000000000000000000000000000101 |
b00000000000000000000000000000001 }
b00000000000000000000000000001000 ~
b11111111111111111111111111110000 #!
b00000000000100 %!
b1111111111111111111111111111000000000000000000000000000000000000 (!
b11111111111111111111111111110000 +!
b11111111010111111111000001101111 L!
1M!
0O!
b01 P!
0S!
b11 U!
b11111111111111111111111111110100 V!
b11111 W!
b10101 X!
b111 Z!
0[!
1\!
b00000 ]!
b11111111111111111111111111110000 ^!
b00000000000000000000000000000001 _!
b00000000000000000000000000000001 c!
b01011 d!
b00000000000000000000000000000001 f!
b11111111111111111111111111110000 g!
b01010 i!
b01 n!
b10 o!
b00000000000000000000000000010100 p!
b111111111111111111111111111100000000000000000000000000000000100000000000000000000000000000010100 q!
b00000000000000000000000000010100 u!
b00000000000000000000000000001000 v!
b11111111111111111111111111110000 w!
b100 x!
b1101111 y!
1z!
b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011010100110000101101100 {!
b11111111111111111111111111110000 '"
b00000000000000000000000000000000 ("
b000000000000000000000000000000011111111111111111111111111111000000000000000000000000000000000000 )"
b000000000000000000000000000000011111111111111111111111111111000000000000000000000000000000000000 ,"
b0000000000000000000000000000000000000000000000000000000000000001 /"
b11111111111111111111111111110000 2"
b00000000000000000000000000000001 3"
b11111111111111111111111111110000 5"
b00000000000000000000000000000001 6"
b00000000000000000000000000000001 7"
b00000000000000000000000000000000 8"
b00000000000000000000000000001000000000000000000000000000000001010000000000000000000000000000000100000000000000000000000000000001 9"
b1110 >"
b00000000000000 @"
b00000000000000000000000000000001 A"
b00000000000000000000000000000001 B"
b00000000000000000000000000000101 C"
b00000000000000000000000000001000 D"
b00000000000000000000000000010000 F"
b00000000000000000000000000000000 G"
b00000000000000000000000000000001 H"
1M"
#21
b11111111111111111111111111110000 6!
0M"
#22
b00000000000000000000000000010100 d
b00000000000000000000000000011000 e
b00000000000000000000000000010100 f
b00000000000000000000000000010000 g
b11 h
b01 j
0m
b00000000000000000000000000001100 q
b11111 r
b10101 s
b11111111111111111111111111110100 t
b111 u
b00000000000000000000000000010000 v
b00000000000000000000000000000000 w
b00000000000000000000000000000001 {
b00000000000000000000000000001000 |
b00000000000000000000000000000000 }
b00000000000000000000000000001100 ~
b00000000000000000000000000000001 #!
b010 $!
b00000000000101 %!
b0000000000000000000000000000000100000000000000000000000000000000 (!
b00000000000000000000000000000001 +!
b00000000000000000000000000000000 L!
b00 P!
b00 U!
b00000000000000000000000000000000 V!
b00000 W!
b00000 X!
b000 Z!
1[!
0\!
b00000000000000000000000000000000 ^!
b00000000000000000000000000000000 _!
b01 `!
0a!
1b!
b11111111111111111111111111110000 c!
b00000 d!
b11111111111111111111111111110000 f!
b00000000000000000000000000000001 g!
b01011 i!
1l!
1m!
b00 n!
b00 o!
b00000000000000000000000000000000 p!
b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011000 q!
b00000000000000000000000000011000 u!
b00000000000000000000000000000000 v!
b00000000000000000000000000000000 w!
b111 x!
b0000000 y!
0z!
b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000110111001101111011001000110010101100110 {!
1%"
1&"
b00000000000000000000000000000000 '"
b111111111111111111111111111100000000000000000000000000000000000100000000000000000000000000000000 )"
b111111111111111111111111111100000000000000000000000000000000000100000000000000000000000000000000 ,"
b1111111111111111111111111111010000000000000000000000000000000000 /"
b00000000000000000000000000000001 2"
b11111111111111111111111111110000 3"
b00000000000000000000000000000001 5"
b11111111111111111111111111110000 6"
b00000000000000000000000000000000 7"
b11111111111111111111111111110100 8"
b00000000000000000000000000001100000000000000000000000000000010000000000000000000000000000000000011111111111111111111111111110000 9"
b00000000000000000000000000000001 ="
b1111 >"
b11111111111100 @"
b11111111111111111111111111110000 A"
b00000000000000000000000000000000 B"
b00000000000000000000000000001000 C"
b00000000000000000000000000001100 D"
b00000000000000000000000000010100 F"
b11111111111111111111111111110000 H"
1I"
b00000000000000000000000000000001 K"
1M"
#23
b00000000000000000000000000000001 7!
0M"
